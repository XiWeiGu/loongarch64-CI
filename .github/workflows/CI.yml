# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  linux-gcc-loongarch64:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: CPU Information
      run: cat /proc/cpuinfo
    - name: Install APT Dependencies
      run: sudo apt-get install -y ninja-build ninja-build meson
    - name: loongarch64-toolchain
      run: |
        wget https://github.com/loongson/build-tools/releases/download/2022.09.06/loongarch64-clfs-7.3-cross-tools-gcc-glibc.tar.xz
        tar -xvf loongarch64-clfs-7.3-cross-tools-gcc-glibc.tar.xz -C /opt
        wget https://github.com/loongson/build-tools/releases/download/2022.09.06/qemu-loongarch64
        chmod +x qemu-loongarch64
    - name: Configure
      run: |
        export PATH=$GITHUB_WORKSPACE:/opt/cross-tools/bin:$PATH
        export LD_LIBRARY_PATH=/opt/cross-tools/target/usr/lib64:$LD_LIBRARY_PATH
        export LD_LIBRARY_PATH=/opt/cross-tools/loongarch64-unknown-linux-gnu/lib64:$LD_LIBRARY_PATH
        meson setup build --cross-file=docker/cross-files/loongarch64-gcc-7.cross
    - name: Build
      run: |
        export PATH=/opt/cross-tools/bin:$PATH
        export LD_LIBRARY_PATH=/opt/cross-tools/target/usr/lib64:$LD_LIBRARY_PATH
        export LD_LIBRARY_PATH=/opt/cross-tools/loongarch64-unknown-linux-gnu/lib64:$LD_LIBRARY_PATH
        ninja -C build -v
    - name: Test
      run: |
        export PATH=$GITHUB_WORKSPACE:/opt/cross-tools/bin:$PATH
        export LD_LIBRARY_PATH=/opt/cross-tools/target/usr/lib64:$LD_LIBRARY_PATH
        export LD_LIBRARY_PATH=/opt/cross-tools/loongarch64-unknown-linux-gnu/lib64:$LD_LIBRARY_PATH
        meson test -C build --timeout-multiplier 0 --print-errorlogs
